# -*- coding: utf-8 -*-
"""
Created on Sun Jun 30 17:50:30 2024

@author: User
"""
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import letter, A4
from reportlab.platypus import Table
from reportlab.lib import colors

from os import getlogin
from datetime import datetime

f = 25.4/72

data = [["EC", 14817 ,"P687","22/06/2024","","Bombona 10 L","V. em 15 dias","",""],
["MP", 2368918516 ,"KT-75-8895","04/06/2024","''","3,6 L","Vencido","",""],
["MP", 20080 ,"KT-75-8895","05/06/2024","''","5 L","\U0001f603 15 dias","",""],
["EC", 20612 ,"KT-75-8895","23/06/2024","''","500 mL","⚠ 15 dias","",""],
["MP", 22141 ,"P6000CX","19/07/2024","''","10 L","⚠ 15 dias","",""],
["GR", 22788 ,"PAINÉISNISSANN","22/06/2024","''","Caixa","⚠ 15 dias","",""],
["PT", 23740 ,"CF700VNR","30/06/2024","''","20 L","⚠ 15 dias","",""],
["EC", 38617 ,"E6430","22/06/2024","''","20 L","⚠ 15 dias","",""],
["MP", 39023 ,"HW-89-7643","22/06/2025","''","10 L","⚠ 15 dias","",""],
["EC", 42857 ,"EPIC300","24/06/2024","","18 L","⚠ 15 dias","",""],
["PT", 42865 ,"VB700A","22/06/2025","","20 L","⚠ 15 dias","",""],
["GR", 45061 ,"SKG-71","13/06/2025","","20 L","⚠ 15 dias","",""],
["MP", 50142 ,"KT-49-4487","28/03/2024","''","5 L","⚠ 15 dias","",""],
["PT", 55001 ,"VB700A","22/06/2025","''","20 L","⚠ 15 dias","",""],
["EC", 58224 ,"E6430","23/06/2024","''","20 L","⚠ 15 dias","",""],
["MP", 59775 ,"SZR-10","03/06/2026","''","50 L","⚠ 15 dias","",""],
["PT", 60879 ,"ÓLEO","16/06/2028","''","20 L","⚠ 15 dias","",""],
["EC", 62420 ,"KT-75-8895","28/06/2024","''","500 mL","⚠ 15 dias","",""],
["EC", 62890 ,"E6431","20/06/2025","''","18 L","⚠ 15 dias","",""],
["MP", 63937 ,"KT-75-8895","04/06/2024","''","3,6 L","⚠ 15 dias","",""],
["PT", 70779 ,"VB700R","26/06/2025","''","500 mL","⚠ 15 dias","",""],
["GR", 71031 ,"SKG-71","03/06/2024","''","20 L","⚠ 15 dias","",""],
["MP", 71236 ,"HW-89-7643","22/06/2025","''","10 L","⚠ 15 dias","",""],
["MP", 73955 ,"KA-44-6589","12/03/2024","''","3,6 L","⚠ 15 dias","",""],
["MP", 77808 ,"WE-9733","22/06/2024","''","5 L","⚠ 15 dias","",""],
["EC", 80311 ,"EPIC300","22/06/2025","''","18 L","⚠ 15 dias","",""],
["EC", 85363 ,"P6000CX","02/07/2024","''","10 L","⚠ 15 dias","",""],
["PT", 90432 ,"VB700A","22/06/2025","''","20 L","⚠ 15 dias","",""],
["EC", 91319 ,"ED7500","22/06/2025","''","18 L","⚠ 15 dias","",""],
["EC", 92046 ,"P687","20/05/2024","''","3,6 L","⚠ 15 dias","",""],
["PT", 97301 ,"VB700A","04/06/2024","''","20 L","⚠ 15 dias","",""],
["EC", 206123 ,"KT-75-8895","23/06/2024","''","500 mL","⚠ 15 dias","",""],
["EC", 14817 ,"P687","22/06/2024","","Bombona 10 L","V. em 15 dias","",""],
["MP", 2368918516 ,"KT-75-8895","04/06/2024","''","3,6 L","Vencido","",""],
["MP", 20080 ,"KT-75-8895","05/06/2024","''","5 L","\U0001f603 15 dias","",""],
["EC", 20612 ,"KT-75-8895","23/06/2024","''","500 mL","⚠ 15 dias","",""],
["MP", 22141 ,"P6000CX","19/07/2024","''","10 L","⚠ 15 dias","",""],
["GR", 22788 ,"PAINÉISNISSANN","22/06/2024","''","Caixa","⚠ 15 dias","",""],
["PT", 23740 ,"CF700VNR","30/06/2024","''","20 L","⚠ 15 dias","",""],
["EC", 38617 ,"E6430","22/06/2024","''","20 L","⚠ 15 dias","",""],
["MP", 39023 ,"HW-89-7643","22/06/2025","''","10 L","⚠ 15 dias","",""],
["EC", 42857 ,"EPIC300","24/06/2024","","18 L","⚠ 15 dias","",""],
["PT", 42865 ,"VB700A","22/06/2025","","20 L","⚠ 15 dias","",""],
["GR", 45061 ,"SKG-71","13/06/2025","","20 L","⚠ 15 dias","",""],
["MP", 50142 ,"KT-49-4487","28/03/2024","''","5 L","⚠ 15 dias","",""],
["PT", 55001 ,"VB700A","22/06/2025","''","20 L","⚠ 15 dias","",""],
["EC", 58224 ,"E6430","23/06/2024","''","20 L","⚠ 15 dias","",""],
["MP", 59775 ,"SZR-10","03/06/2026","''","50 L","⚠ 15 dias","",""],
["PT", 60879 ,"ÓLEO","16/06/2028","''","20 L","⚠ 15 dias","",""],
["EC", 62420 ,"KT-75-8895","28/06/2024","''","500 mL","⚠ 15 dias","",""],
["EC", 62890 ,"E6431","20/06/2025","''","18 L","⚠ 15 dias","",""],
["MP", 63937 ,"KT-75-8895","04/06/2024","''","3,6 L","⚠ 15 dias","",""],
["PT", 70779 ,"VB700R","26/06/2025","''","500 mL","⚠ 15 dias","",""],
["GR", 71031 ,"SKG-71","03/06/2024","''","20 L","⚠ 15 dias","",""],
["MP", 71236 ,"HW-89-7643","22/06/2025","''","10 L","⚠ 15 dias","",""],
["MP", 73955 ,"KA-44-6589","12/03/2024","''","3,6 L","⚠ 15 dias","",""],
["MP", 77808 ,"WE-9733","22/06/2024","''","5 L","⚠ 15 dias","",""],
["EC", 80311 ,"EPIC300","22/06/2025","''","18 L","⚠ 15 dias","",""],
["EC", 85363 ,"P6000CX","02/07/2024","''","10 L","⚠ 15 dias","",""],
["PT", 90432 ,"VB700A","22/06/2025","''","20 L","⚠ 15 dias","",""],
["EC", 91319 ,"ED7500","22/06/2025","''","18 L","⚠ 15 dias","",""],
["EC", 92046 ,"P687","20/05/2024","''","3,6 L","⚠ 15 dias","",""],
["PT", 97301 ,"VB700A","04/06/2024","''","20 L","⚠ 15 dias","",""],
["EC", 206123 ,"KT-75-8895","23/06/2024","''","500 mL","⚠ 15 dias","",""]]

#criando função para eração de tabelas
def Table_Gen(data):
    
    
    
    cabeçalho = ['Idf.','ID','Código','Validade','Revalidação','Volume','Status','R','D']
    
    data.insert(0,cabeçalho)
    
    
    list_height_row = [6/f]*(len(data)-1)
    list_height_row.insert(0, 9/f)
    
    lenght = 182/f
    
    head_color = colors.toColor('rgba(0, 115, 153, 0.9)')
    
    width_list = [lenght*0.06,lenght*0.11,lenght*0.19,
                  lenght*0.13,lenght*0.16,lenght*0.16,
                  lenght*0.14,lenght*0.03,lenght*0.03,]
    
    Tabela = Table(data = data,colWidths=width_list,rowHeights=list_height_row)
    
    Tabela.setStyle([('GRID',(0,0),(-1,-1),0.5,'GREY'),
                      ('BACKGROUND',(0,0),(-1,0),head_color),
                      ('TEXTCOLOR',(0,0),(-1,0),'white'),
                      ('FONTSIZE',(0,0),(-1,0),12),
                      ('FONTNAME',(0,0),(-1,0),'Helvetica-Bold'),
                      ('ALIGN',(0,0),(-1,-1),'CENTER'),
                      ('VALIGN',(0,0),(-1,-1),'MIDDLE')
                      ])
    
    return Tabela


y_size_Resp = 18
y_size_linha = 12
   
y_resp_var = 18

var = 100
    
    
pdf = canvas.Canvas(f'Relatório de Armazenamento - {str(datetime.today())[:11]} - {getlogin()}.pdf',pagesize = A4)

# for Resp in dict_Var

pdf.setFont('Helvetica-Bold',23)
pdf.drawString(14/f, 792-var,"João Ricardo")
# pdf.setFont('Helvetica-Bold',20)
pdf.setFillColorRGB(0.102, 0.506, 0.6392,0.97)
pdf.drawString(14/f-0.30, 792+0.30-var,"João Ricardo")
# pdf.drawString(14/f, 842,"Ana Cussolim")

# pdf.setLineWidth(1.5)
# pdf.setStrokeColorRGB(0.525, 0.525, 0.525)

pdf.line(13.5/f,842-((13.5+2)/f+12)-var,597-13.5/f,842-((13.5+2)/f+12)-var)

pdf.setLineWidth(1.5)
pdf.setStrokeColorRGB(0.102, 0.506, 0.6392,0.97)
pdf.line(13.5/f-1,842-((13.5+2)/f+12)+0.5-var,597-13.5/f,842-((13.5+2)/f+12)+0.50-var)

# pdf.setLineWidth(1.5)
pdf.line(13.5/f,842-((14)/f+11)-var,13.5/f,842-((14)/f+11)-12-var)#842-((9.3)/f))

table = Table_Gen(data)

table_size = (6/f)*(len(data)-1)+9/f

table.wrapOn(pdf, 0, 0) 
table.drawOn(pdf, 13.5/f, (842-table_size)-((13.5+2)/f+19)-var)

pdf.showPage()
pdf.save()
    
    
    
    
    
